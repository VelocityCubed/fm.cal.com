# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - cal-test

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Yarn
        run: corepack enable

      - name: Yarn install, build, and test
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          CALENDSO_ENCRYPTION_KEY: ${{ secrets.CALENDSO_ENCRYPTION_KEY }}
          NEXT_PUBLIC_DEBUG: 1
          NEXT_PUBLIC_WEBAPP_URL: 'http://localhost:3000'
          NEXT_PUBLIC_WEBSITE_URL: 'http://localhost:3000'
          NEXT_PUBLIC_CONSOLE_URL: 'http://localhost:3004'
          NEXT_PUBLIC_EMBED_LIB_URL: 'http://localhost:3000/embed/embed.js'
          NEXT_PUBLIC_API_V2_URL: "http://localhost:5555/api/v2"
          NEXTAUTH_URL: 'http://localhost:3000'
          CRON_API_KEY: '0cc0e6c35519bba620c9360cfe3e68d0'
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_DIRECT_URL: ${{ secrets.DATABASE_URL }}
          EMAIL_FROM: 'notifications@yourselfhostedcal.com'
          EMAIL_FROM_NAME: 'Cal.com'
          NEXT_PUBLIC_APP_NAME: "Cal.com"
          NEXT_PUBLIC_SUPPORT_MAIL_ADDRESS: "help@cal.com"
          NEXT_PUBLIC_COMPANY_NAME: "Cal.com, Inc."
          NEXTAUTH_COOKIE_DOMAIN: ""
        run: |
          yarn install
          yarn build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # To set up WORKFLOW_PAT:
      # 1. Create a Personal Access Token (PAT) in GitHub:
      #    - Go to GitHub → Settings → Developer settings → Personal access tokens → Tokens (classic) → Generate new token
      #    - Grant these permissions: repo (all), workflow
      #    - Copy the generated token
      # 2. Add the token as a repository secret:
      #    - Go to your repository → Settings → Secrets and variables → Actions → New repository secret
      #    - Name: WORKFLOW_PAT
      #    - Value: <paste the token you created>
      #    - Click "Add secret"
      # 3. This token needs access to the VelocityCubed/cal.com-docker repository
      #    - Either use a PAT from an account with access to that repository
      #    - Or make sure the repository is public and the workflow is triggerable via API
      - name: Trigger build-and-push workflow in VelocityCubed/cal.com-docker
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.WORKFLOW_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/VelocityCubed/cal.com-docker/actions/workflows/build-and-push.yml/dispatches \
            -d '{"ref":"main"}'